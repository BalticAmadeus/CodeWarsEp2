//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Game.ControlPanel.DebugServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DebugServiceRef.IDebugService")]
    public interface IDebugService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDebugService/CheckMyAccess", ReplyAction="http://tempuri.org/IDebugService/CheckMyAccessResponse")]
        string CheckMyAccess();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDebugService/CheckMyAccess", ReplyAction="http://tempuri.org/IDebugService/CheckMyAccessResponse")]
        System.Threading.Tasks.Task<string> CheckMyAccessAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDebugService/GrantMeAccess", ReplyAction="http://tempuri.org/IDebugService/GrantMeAccessResponse")]
        string GrantMeAccess(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDebugService/GrantMeAccess", ReplyAction="http://tempuri.org/IDebugService/GrantMeAccessResponse")]
        System.Threading.Tasks.Task<string> GrantMeAccessAsync(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDebugService/RevokeMyAccess", ReplyAction="http://tempuri.org/IDebugService/RevokeMyAccessResponse")]
        string RevokeMyAccess(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDebugService/RevokeMyAccess", ReplyAction="http://tempuri.org/IDebugService/RevokeMyAccessResponse")]
        System.Threading.Tasks.Task<string> RevokeMyAccessAsync(string request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDebugServiceChannel : Game.ControlPanel.DebugServiceRef.IDebugService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DebugServiceClient : System.ServiceModel.ClientBase<Game.ControlPanel.DebugServiceRef.IDebugService>, Game.ControlPanel.DebugServiceRef.IDebugService {
        
        public DebugServiceClient() {
        }
        
        public DebugServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DebugServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DebugServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DebugServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CheckMyAccess() {
            return base.Channel.CheckMyAccess();
        }
        
        public System.Threading.Tasks.Task<string> CheckMyAccessAsync() {
            return base.Channel.CheckMyAccessAsync();
        }
        
        public string GrantMeAccess(string request) {
            return base.Channel.GrantMeAccess(request);
        }
        
        public System.Threading.Tasks.Task<string> GrantMeAccessAsync(string request) {
            return base.Channel.GrantMeAccessAsync(request);
        }
        
        public string RevokeMyAccess(string request) {
            return base.Channel.RevokeMyAccess(request);
        }
        
        public System.Threading.Tasks.Task<string> RevokeMyAccessAsync(string request) {
            return base.Channel.RevokeMyAccessAsync(request);
        }
    }
}
